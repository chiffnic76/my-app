{"ast":null,"code":"// src/App.js\nimport React,{useState}from'react';import ReactDOM from'react-dom';import'./App.css';import Sidebar from'./Sidebar';import EquipmentsPage from'./EquipmentsPage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[showSidebar,setShowSidebar]=useState(false);const[currentPage,setCurrentPage]=useState(\"home\");const toggleSidebar=()=>{setShowSidebar(!showSidebar);};const navigateTo=page=>{setCurrentPage(page);};const[equipments,setEquipments]=useState([{id:1,name:\"Pompe à eau\",status:\"Fonctionnel\"},{id:2,name:\"Compresseur d'air\",status:\"En panne\"}]);return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-button\",onClick:toggleSidebar,children:showSidebar?\"Masquer le menu\":\"Afficher le menu\"}),showSidebar&&/*#__PURE__*/_jsx(Sidebar,{navigateTo:navigateTo}),/*#__PURE__*/_jsxs(\"div\",{className:`content ${showSidebar?'with-sidebar':'full-width'}`,children:[currentPage===\"home\"&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"GMAO - Gestion de Maintenance\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Bienvenue dans votre application GMAO.\"})]}),currentPage===\"equipments\"&&/*#__PURE__*/_jsx(EquipmentsPage,{equipments:equipments})]})]});}// Rendu du composant dans le conteneur avec id \"root\"\nReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById('root'));/*:\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport EquipmentsPage from './EquipmentsPage';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"home\");\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const navigateTo = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n\n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        {showSidebar ? \"Masquer le menu\" : \"Afficher le menu\"}\n      </button>\n      {showSidebar && <Sidebar navigateTo={navigateTo} />}\n      <div className={`content ${showSidebar ? 'with-sidebar' : 'full-width'}`}>\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*//* version 2\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar />\n      <div className=\"content\">\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*//* version 1\n// my-gmao-app/src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>GMAO - Gestion de Maintenance</h1>\n      \n      <div className=\"section\">\n        <h2>Liste des équipements</h2>\n        {equipments.map((equipment) => (\n          <div key={equipment.id} className=\"equipment\">\n            <strong>{equipment.name}</strong> - {equipment.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Tickets de maintenance</h2>\n        {tickets.map((ticket) => (\n          <div key={ticket.id} className=\"ticket\">\n            <strong>Problème :</strong> {ticket.issue} <br />\n            <strong>Statut :</strong> {ticket.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Ajouter un nouvel équipement</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Nom de l'équipement\"\n          value={newEquipment.name}\n          onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n        />\n        <select\n          value={newEquipment.status}\n          onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n        >\n          <option value=\"Fonctionnel\">Fonctionnel</option>\n          <option value=\"En panne\">En panne</option>\n        </select>\n        <button onClick={addEquipment}>Ajouter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*//*\nStart pf the project React.js start up\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/","map":{"version":3,"names":["React","useState","ReactDOM","Sidebar","EquipmentsPage","jsx","_jsx","jsxs","_jsxs","App","showSidebar","setShowSidebar","currentPage","setCurrentPage","toggleSidebar","navigateTo","page","equipments","setEquipments","id","name","status","className","children","onClick","render","document","getElementById"],"sources":["/data/data/com.termux/files/home/my-app/src/components/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport EquipmentsPage from './EquipmentsPage';\n\nexport default function App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [currentPage, setCurrentPage] = useState(\"home\");\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n\n  const navigateTo = (page) => {\n    setCurrentPage(page);\n  };\n\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        {showSidebar ? \"Masquer le menu\" : \"Afficher le menu\"}\n      </button>\n      {showSidebar && <Sidebar navigateTo={navigateTo} />}\n      <div className={`content ${showSidebar ? 'with-sidebar' : 'full-width'}`}>\n        {currentPage === \"home\" && (\n          <div>\n            <h1>GMAO - Gestion de Maintenance</h1>\n            <p>Bienvenue dans votre application GMAO.</p>\n          </div>\n        )}\n        {currentPage === \"equipments\" && <EquipmentsPage equipments={equipments} />}\n      </div>\n    </div>\n  );\n}\n// Rendu du composant dans le conteneur avec id \"root\"\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*:\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport EquipmentsPage from './EquipmentsPage';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"home\");\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const navigateTo = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n\n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        {showSidebar ? \"Masquer le menu\" : \"Afficher le menu\"}\n      </button>\n      {showSidebar && <Sidebar navigateTo={navigateTo} />}\n      <div className={`content ${showSidebar ? 'with-sidebar' : 'full-width'}`}>\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/ \n/* version 2\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar />\n      <div className=\"content\">\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/* version 1\n// my-gmao-app/src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>GMAO - Gestion de Maintenance</h1>\n      \n      <div className=\"section\">\n        <h2>Liste des équipements</h2>\n        {equipments.map((equipment) => (\n          <div key={equipment.id} className=\"equipment\">\n            <strong>{equipment.name}</strong> - {equipment.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Tickets de maintenance</h2>\n        {tickets.map((ticket) => (\n          <div key={ticket.id} className=\"ticket\">\n            <strong>Problème :</strong> {ticket.issue} <br />\n            <strong>Statut :</strong> {ticket.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Ajouter un nouvel équipement</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Nom de l'équipement\"\n          value={newEquipment.name}\n          onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n        />\n        <select\n          value={newEquipment.status}\n          onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n        >\n          <option value=\"Fonctionnel\">Fonctionnel</option>\n          <option value=\"En panne\">En panne</option>\n        </select>\n        <button onClick={addEquipment}>Ajouter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/*\nStart pf the project React.js start up\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,WAAW,CAClB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,MAAM,CAAC,CAEtD,KAAM,CAAAa,aAAa,CAAGA,CAAA,GAAM,CAC1BH,cAAc,CAAC,CAACD,WAAW,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAK,UAAU,CAAIC,IAAI,EAAK,CAC3BH,cAAc,CAACG,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGjB,QAAQ,CAAC,CAC3C,CAAEkB,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,aAAa,CAAEC,MAAM,CAAE,aAAc,CAAC,CACrD,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,mBAAmB,CAAEC,MAAM,CAAE,UAAW,CAAC,CACzD,CAAC,CAEF,mBACEb,KAAA,QAAKc,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BjB,IAAA,WAAQgB,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEV,aAAc,CAAAS,QAAA,CACtDb,WAAW,CAAG,iBAAiB,CAAG,kBAAkB,CAC/C,CAAC,CACRA,WAAW,eAAIJ,IAAA,CAACH,OAAO,EAACY,UAAU,CAAEA,UAAW,CAAE,CAAC,cACnDP,KAAA,QAAKc,SAAS,CAAE,WAAWZ,WAAW,CAAG,cAAc,CAAG,YAAY,EAAG,CAAAa,QAAA,EACtEX,WAAW,GAAK,MAAM,eACrBJ,KAAA,QAAAe,QAAA,eACEjB,IAAA,OAAAiB,QAAA,CAAI,+BAA6B,CAAI,CAAC,cACtCjB,IAAA,MAAAiB,QAAA,CAAG,wCAAsC,CAAG,CAAC,EAC1C,CACN,CACAX,WAAW,GAAK,YAAY,eAAIN,IAAA,CAACF,cAAc,EAACa,UAAU,CAAEA,UAAW,CAAE,CAAC,EACxE,CAAC,EACH,CAAC,CAEV,CACA;AACAf,QAAQ,CAACuB,MAAM,cAACnB,IAAA,CAACG,GAAG,GAAE,CAAC,CAAEiB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEzignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}