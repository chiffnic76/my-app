{"ast":null,"code":"// src/authorization-errors.ts\nvar __experimental_reverificationMismatch = missingConfig => ({\n  clerk_error: {\n    type: \"forbidden\",\n    reason: \"reverification-mismatch\",\n    metadata: {\n      reverification: missingConfig\n    }\n  }\n});\nvar __experimental_reverificationMismatchResponse = (...args) => new Response(JSON.stringify(__experimental_reverificationMismatch(...args)), {\n  status: 403\n});\nvar __experimental_isReverificationHint = result => {\n  var _a, _b;\n  return result && typeof result === \"object\" && \"clerk_error\" in result && ((_a = result.clerk_error) == null ? void 0 : _a.type) === \"forbidden\" && ((_b = result.clerk_error) == null ? void 0 : _b.reason) === \"reverification-mismatch\";\n};\nexport { __experimental_reverificationMismatch, __experimental_reverificationMismatchResponse, __experimental_isReverificationHint };","map":{"version":3,"names":["__experimental_reverificationMismatch","missingConfig","clerk_error","type","reason","metadata","reverification","__experimental_reverificationMismatchResponse","args","Response","JSON","stringify","status","__experimental_isReverificationHint","result","_a","_b"],"sources":["/data/data/com.termux/files/home/my-app/node_modules/@clerk/shared/src/authorization-errors.ts"],"sourcesContent":["import type { __experimental_ReverificationConfig } from '@clerk/types';\n\ntype ClerkError<T> = {\n  clerk_error: T;\n};\n\ntype ReverificationMismatchError<M extends { metadata?: any } = { metadata: unknown }> = ClerkError<\n  {\n    type: 'forbidden';\n    reason: 'reverification-mismatch';\n  } & M\n>;\n\nconst __experimental_reverificationMismatch = <MC extends __experimental_ReverificationConfig>(missingConfig?: MC) =>\n  ({\n    clerk_error: {\n      type: 'forbidden',\n      reason: 'reverification-mismatch',\n      metadata: {\n        reverification: missingConfig,\n      },\n    },\n  }) satisfies ReverificationMismatchError;\n\nconst __experimental_reverificationMismatchResponse = (\n  ...args: Parameters<typeof __experimental_reverificationMismatch>\n) =>\n  new Response(JSON.stringify(__experimental_reverificationMismatch(...args)), {\n    status: 403,\n  });\n\nconst __experimental_isReverificationHint = (\n  result: any,\n): result is ReturnType<typeof __experimental_reverificationMismatch> => {\n  return (\n    result &&\n    typeof result === 'object' &&\n    'clerk_error' in result &&\n    result.clerk_error?.type === 'forbidden' &&\n    result.clerk_error?.reason === 'reverification-mismatch'\n  );\n};\n\nexport {\n  __experimental_reverificationMismatch,\n  __experimental_reverificationMismatchResponse,\n  __experimental_isReverificationHint,\n};\n"],"mappings":";AAaA,IAAMA,qCAAA,GAAyFC,aAAA,KAC5F;EACCC,WAAA,EAAa;IACXC,IAAA,EAAM;IACNC,MAAA,EAAQ;IACRC,QAAA,EAAU;MACRC,cAAA,EAAgBL;IAClB;EACF;AACF;AAEF,IAAMM,6CAAA,GAAgDA,CAAA,GACjDC,IAAA,KAEH,IAAIC,QAAA,CAASC,IAAA,CAAKC,SAAA,CAAUX,qCAAA,CAAsC,GAAGQ,IAAI,CAAC,GAAG;EAC3EI,MAAA,EAAQ;AACV,CAAC;AAEH,IAAMC,mCAAA,GACJC,MAAA,IACuE;EAjCzE,IAAAC,EAAA,EAAAC,EAAA;EAkCE,OACEF,MAAA,IACA,OAAOA,MAAA,KAAW,YAClB,iBAAiBA,MAAA,MACjBC,EAAA,GAAAD,MAAA,CAAOZ,WAAA,KAAP,gBAAAa,EAAA,CAAoBZ,IAAA,MAAS,iBAC7Ba,EAAA,GAAAF,MAAA,CAAOZ,WAAA,KAAP,gBAAAc,EAAA,CAAoBZ,MAAA,MAAW;AAEnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}