{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/my-app/src/components/pages/SubscriptionPage/SubscriptionPage.js\",\n  _s = $RefreshSig$();\n// /* src/components/pages/SubscriptionPage/SubscriptionPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db, storage } from './firebaseConfig'; // Firebase config file\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport CloseButton from '../../ui/buttons/CloseButton';\nimport './SubscriptionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubscriptionPage() {\n  _s();\n  const navigate = useNavigate();\n  const goToWelcomePage = () => {\n    navigate('/'); // Redirige vers la page de connexion\n  };\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubscription = async e => {\n    e.preventDefault();\n    try {\n      // Créer un utilisateur avec email et mot de passe dans Firebase\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigate('/login'); // Redirige vers la page principale après inscription\n    } catch (err) {\n      setError(\"Erreur d'inscription : \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subscription-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"subscription-form\",\n      onSubmit: handleSubscription,\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClose: goToWelcomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(SubscriptionPage, \"qCGiFeeUWkiIU+KqUq0nNz+KCrI=\", false, function () {\n  return [useNavigate];\n});\n_c = SubscriptionPage;\n;\nexport default SubscriptionPage;\n\n/*\nimport React, { useState } from 'react';\nimport { auth, db, storage } from './firebaseConfig'; // Firebase config file\n\nfunction SignupPage() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [profilePhoto, setProfilePhoto] = useState(null);\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n      const user = userCredential.user;\n      \n      // Upload profile photo\n      if (profilePhoto) {\n        const photoRef = storage.ref(`profilePhotos/${user.uid}`);\n        await photoRef.put(profilePhoto);\n        const photoURL = await photoRef.getDownloadURL();\n\n        // Save user details to Firestore\n        await db.collection('users').doc(user.uid).set({\n          firstName,\n          lastName,\n          photoURL,\n          email,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSignup}>\n      <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\n      <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} required />\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\n      <input type=\"file\" onChange={(e) => setProfilePhoto(e.target.files[0])} accept=\"image/*\" />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n}\n\nexport default SignupPage;\n*/\nvar _c;\n$RefreshReg$(_c, \"SubscriptionPage\");","map":{"version":3,"names":["React","useState","useNavigate","auth","db","storage","createUserWithEmailAndPassword","CloseButton","jsxDEV","_jsxDEV","SubscriptionPage","_s","navigate","goToWelcomePage","email","setEmail","password","setPassword","error","setError","handleSubscription","e","preventDefault","err","message","className","children","onSubmit","onClose","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/my-app/src/components/pages/SubscriptionPage/SubscriptionPage.js"],"sourcesContent":["// /* src/components/pages/SubscriptionPage/SubscriptionPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db, storage } from './firebaseConfig'; // Firebase config file\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport CloseButton from '../../ui/buttons/CloseButton';\nimport './SubscriptionPage.css';\n\nfunction SubscriptionPage () {\n  const navigate = useNavigate();\n  const goToWelcomePage = () => {\n    navigate('/');  // Redirige vers la page de connexion\n  };\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubscription = async (e) => {\n    e.preventDefault();\n    try {\n      // Créer un utilisateur avec email et mot de passe dans Firebase\n      await createUserWithEmailAndPassword(auth, email, password);\n      navigate('/login');  // Redirige vers la page principale après inscription\n    } catch (err) {\n      setError(\"Erreur d'inscription : \" + err.message);\n    }\n  };\n\n  return (\n    <div className=\"subscription-wrapper\">\n       <form className=\"subscription-form\" onSubmit={handleSubscription}>\n        <CloseButton onClose={goToWelcomePage} />\n        <h2>Inscription</h2>\n        {error && <p className=\"error-message\">{error}</p>}\n        <label>Email</label>\n        <input\n          className=\"input\"\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <label>Mot de passe</label>\n        <input\n          className=\"input\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button className=\"button\" type=\"submit\">S'inscrire</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SubscriptionPage;\n\n\n/*\nimport React, { useState } from 'react';\nimport { auth, db, storage } from './firebaseConfig'; // Firebase config file\n\nfunction SignupPage() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [profilePhoto, setProfilePhoto] = useState(null);\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n      const user = userCredential.user;\n      \n      // Upload profile photo\n      if (profilePhoto) {\n        const photoRef = storage.ref(`profilePhotos/${user.uid}`);\n        await photoRef.put(profilePhoto);\n        const photoURL = await photoRef.getDownloadURL();\n\n        // Save user details to Firestore\n        await db.collection('users').doc(user.uid).set({\n          firstName,\n          lastName,\n          photoURL,\n          email,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error signing up:\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSignup}>\n      <input type=\"text\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required />\n      <input type=\"text\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)} required />\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\n      <input type=\"file\" onChange={(e) => setProfilePhoto(e.target.files[0])} accept=\"image/*\" />\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n}\n\nexport default SignupPage;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}