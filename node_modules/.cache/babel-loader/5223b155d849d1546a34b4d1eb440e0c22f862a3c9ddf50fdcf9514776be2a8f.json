{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/my-app/src/components/App.js\",\n  _s = $RefreshSig$();\n// src/components/App.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './AuthContext';\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport NotFoundPage from './NotFoundPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequireAuth = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 39\n  }, this);\n};\n_s(RequireAuth, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = RequireAuth;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n          children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n// Rendu du composant dans le conteneur avec id \"root\"\n_c2 = App;\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\n/*:\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport EquipmentsPage from './EquipmentsPage';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"home\");\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const navigateTo = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n\n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        {showSidebar ? \"Masquer le menu\" : \"Afficher le menu\"}\n      </button>\n      {showSidebar && <Sidebar navigateTo={navigateTo} />}\n      <div className={`content ${showSidebar ? 'with-sidebar' : 'full-width'}`}>\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/* version 2\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar />\n      <div className=\"content\">\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/* version 1\n// my-gmao-app/src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>GMAO - Gestion de Maintenance</h1>\n      \n      <div className=\"section\">\n        <h2>Liste des équipements</h2>\n        {equipments.map((equipment) => (\n          <div key={equipment.id} className=\"equipment\">\n            <strong>{equipment.name}</strong> - {equipment.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Tickets de maintenance</h2>\n        {tickets.map((ticket) => (\n          <div key={ticket.id} className=\"ticket\">\n            <strong>Problème :</strong> {ticket.issue} <br />\n            <strong>Statut :</strong> {ticket.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Ajouter un nouvel équipement</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Nom de l'équipement\"\n          value={newEquipment.name}\n          onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n        />\n        <select\n          value={newEquipment.status}\n          onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n        >\n          <option value=\"Fonctionnel\">Fonctionnel</option>\n          <option value=\"En panne\">En panne</option>\n        </select>\n        <button onClick={addEquipment}>Ajouter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/*\nStart pf the project React.js start up\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"RequireAuth\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Routes","Route","Navigate","AuthProvider","useAuth","LoginPage","HomePage","NotFoundPage","jsxDEV","_jsxDEV","RequireAuth","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","path","element","_c2","render","document","getElementById","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/my-app/src/components/App.js"],"sourcesContent":["// src/components/App.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './AuthContext';\nimport LoginPage from './LoginPage';\nimport HomePage from './HomePage';\nimport NotFoundPage from './NotFoundPage';\n\nconst RequireAuth = ({ children }) => {\n  const { isAuthenticated } = useAuth();\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\n};\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route \n            path=\"/home\" \n            element={\n              <RequireAuth>\n                <HomePage />\n              </RequireAuth>\n            } \n          />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n    </BrowserRouter>      \n  );\n}\n// Rendu du composant dans le conteneur avec id \"root\"\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*:\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport EquipmentsPage from './EquipmentsPage';\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(true);\n  const [currentPage, setCurrentPage] = useState(\"home\");\n\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const navigateTo = (page) => {\n    setCurrentPage(page);\n  };\n  \n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n\n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <button className=\"toggle-button\" onClick={toggleSidebar}>\n        {showSidebar ? \"Masquer le menu\" : \"Afficher le menu\"}\n      </button>\n      {showSidebar && <Sidebar navigateTo={navigateTo} />}\n      <div className={`content ${showSidebar ? 'with-sidebar' : 'full-width'}`}>\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/ \n/* version 2\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar />\n      <div className=\"content\">\n        <h1>GMAO - Gestion de Maintenance</h1>\n        \n        <div id=\"equipments\" className=\"section\">\n          <h2>Liste des équipements</h2>\n          {equipments.map((equipment) => (\n            <div key={equipment.id} className=\"equipment\">\n              <strong>{equipment.name}</strong> - {equipment.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"tickets\" className=\"section\">\n          <h2>Tickets de maintenance</h2>\n          {tickets.map((ticket) => (\n            <div key={ticket.id} className=\"ticket\">\n              <strong>Problème :</strong> {ticket.issue} <br />\n              <strong>Statut :</strong> {ticket.status}\n            </div>\n          ))}\n        </div>\n        \n        <div id=\"add-equipment\" className=\"section\">\n          <h2>Ajouter un nouvel équipement</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Nom de l'équipement\"\n            value={newEquipment.name}\n            onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n          />\n          <select\n            value={newEquipment.status}\n            onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n          >\n            <option value=\"Fonctionnel\">Fonctionnel</option>\n            <option value=\"En panne\">En panne</option>\n          </select>\n          <button onClick={addEquipment}>Ajouter</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/* version 1\n// my-gmao-app/src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [equipments, setEquipments] = useState([\n    { id: 1, name: \"Pompe à eau\", status: \"Fonctionnel\" },\n    { id: 2, name: \"Compresseur d'air\", status: \"En panne\" }\n  ]);\n  \n  const [tickets, setTickets] = useState([\n    { id: 1, issue: \"Remplacer le filtre du compresseur\", status: \"Ouvert\" },\n    { id: 2, issue: \"Vérifier la pression de la pompe à eau\", status: \"En cours\" }\n  ]);\n\n  const [newEquipment, setNewEquipment] = useState({ name: \"\", status: \"Fonctionnel\" });\n\n  const addEquipment = () => {\n    setEquipments([...equipments, { id: equipments.length + 1, ...newEquipment }]);\n    setNewEquipment({ name: \"\", status: \"Fonctionnel\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>GMAO - Gestion de Maintenance</h1>\n      \n      <div className=\"section\">\n        <h2>Liste des équipements</h2>\n        {equipments.map((equipment) => (\n          <div key={equipment.id} className=\"equipment\">\n            <strong>{equipment.name}</strong> - {equipment.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Tickets de maintenance</h2>\n        {tickets.map((ticket) => (\n          <div key={ticket.id} className=\"ticket\">\n            <strong>Problème :</strong> {ticket.issue} <br />\n            <strong>Statut :</strong> {ticket.status}\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"section\">\n        <h2>Ajouter un nouvel équipement</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Nom de l'équipement\"\n          value={newEquipment.name}\n          onChange={(e) => setNewEquipment({ ...newEquipment, name: e.target.value })}\n        />\n        <select\n          value={newEquipment.status}\n          onChange={(e) => setNewEquipment({ ...newEquipment, status: e.target.value })}\n        >\n          <option value=\"Fonctionnel\">Fonctionnel</option>\n          <option value=\"En panne\">En panne</option>\n        </select>\n        <button onClick={addEquipment}>Ajouter</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n*/\n/*\nStart pf the project React.js start up\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,SAASC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AACrD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAgB,CAAC,GAAGT,OAAO,CAAC,CAAC;EACrC,OAAOS,eAAe,GAAGF,QAAQ,gBAAGF,OAAA,CAACP,QAAQ;IAACY,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACN,EAAA,CAHIF,WAAW;EAAA,QACaN,OAAO;AAAA;AAAAe,EAAA,GAD/BT,WAAW;AAKjB,eAAe,SAASU,GAAGA,CAAA,EAAG;EAC5B,oBACEX,OAAA,CAACV,aAAa;IAAAY,QAAA,eACVF,OAAA,CAACT,MAAM;MAAAW,QAAA,gBACLF,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEb,OAAA,CAACJ,SAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CT,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,OAAO;QACZC,OAAO,eACLb,OAAA,CAACC,WAAW;UAAAC,QAAA,eACVF,OAAA,CAACH,QAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFT,OAAA,CAACR,KAAK;QAACoB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEb,OAAA,CAACF,YAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB;AACA;AAAAK,GAAA,GAlBwBH,GAAG;AAmB3BtB,QAAQ,CAAC0B,MAAM,cAACf,OAAA,CAACW,GAAG;EAAAL,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEzignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}