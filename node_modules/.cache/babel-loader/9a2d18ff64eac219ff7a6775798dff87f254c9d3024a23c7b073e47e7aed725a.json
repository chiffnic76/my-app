{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/my-app/src/components/ui/inputs/UserDataInput/UserDataInput.js\",\n  _s = $RefreshSig$();\n// src/components/ui/inputs/UserDataInput/UserDataInput.js\nimport React from 'react';\nimport styles from './UserDataInput.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDataInput = ({\n  type = 'text',\n  // Type de l'input (texte, email, mot de passe, etc.)\n  label = '',\n  // Label pour l'input\n  placeholder = '',\n  // Placeholder du champ\n  value = '',\n  // Valeur initiale\n  onChange = () => {},\n  // Fonction pour gérer les changements de valeur\n  required = false,\n  // Si le champ est requis ou non\n  className = '',\n  maxLength = null,\n  // Longueur maximale\n  minLength = null,\n  // Longueur minimale\n  errorMessage = '',\n  // Message d'erreur en cas de validation\n  validate = null\n}) => {\n  _s();\n  const [error, setError] = React.useState('');\n\n  // Gérer le changement de valeur et la validation\n  const handleChange = e => {\n    const newValue = e.target.value;\n    if (validate) {\n      const validationError = validate(newValue);\n      setError(validationError ? errorMessage : '');\n    }\n    onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.UserDataInput,\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      placeholder: placeholder,\n      value: value,\n      onChange: handleChange,\n      required: required,\n      className: styles.UserDataInput,\n      maxLength: maxLength,\n      minLength: minLength,\n      \"aria-invalid\": error ? \"true\" : \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(UserDataInput, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = UserDataInput;\nexport default UserDataInput;\nvar _c;\n$RefreshReg$(_c, \"UserDataInput\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","UserDataInput","type","label","placeholder","value","onChange","required","className","maxLength","minLength","errorMessage","validate","_s","error","setError","useState","handleChange","e","newValue","target","validationError","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/my-app/src/components/ui/inputs/UserDataInput/UserDataInput.js"],"sourcesContent":["// src/components/ui/inputs/UserDataInput/UserDataInput.js\nimport React from 'react';\nimport styles from './UserDataInput.module.css';\n\nconst UserDataInput = ({\n  type = 'text',       // Type de l'input (texte, email, mot de passe, etc.)\n  label = '',          // Label pour l'input\n  placeholder = '',    // Placeholder du champ\n  value = '',          // Valeur initiale\n  onChange = () => {}, // Fonction pour gérer les changements de valeur\n  required = false,    // Si le champ est requis ou non\n  className = '',\n  maxLength = null,    // Longueur maximale\n  minLength = null,    // Longueur minimale\n  errorMessage = '',   // Message d'erreur en cas de validation\n  validate = null\n}) => {\n  const [error, setError] = React.useState('');\n\n  // Gérer le changement de valeur et la validation\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    if (validate) {\n      const validationError = validate(newValue);\n      setError(validationError ? errorMessage : '');\n    }\n    onChange(newValue);\n};\nreturn (\n  <div className={styles.UserDataInput}>\n    {label && <label>{label}</label>}\n    <input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleChange}\n      required={required}\n      className={styles.UserDataInput}\n      maxLength={maxLength}\n      minLength={minLength}\n      aria-invalid={error ? \"true\" : \"false\"}\n    />\n    {error && <span className=\"error-message\">{error}</span>}\n  </div>\n  );\n}\nexport default UserDataInput;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAC;EACrBC,IAAI,GAAG,MAAM;EAAQ;EACrBC,KAAK,GAAG,EAAE;EAAW;EACrBC,WAAW,GAAG,EAAE;EAAK;EACrBC,KAAK,GAAG,EAAE;EAAW;EACrBC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC;EAAE;EACrBC,QAAQ,GAAG,KAAK;EAAK;EACrBC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG,IAAI;EAAK;EACrBC,SAAS,GAAG,IAAI;EAAK;EACrBC,YAAY,GAAG,EAAE;EAAI;EACrBC,QAAQ,GAAG;AACb,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACf,KAAK;IAC/B,IAAIO,QAAQ,EAAE;MACZ,MAAMS,eAAe,GAAGT,QAAQ,CAACO,QAAQ,CAAC;MAC1CJ,QAAQ,CAACM,eAAe,GAAGV,YAAY,GAAG,EAAE,CAAC;IAC/C;IACAL,QAAQ,CAACa,QAAQ,CAAC;EACtB,CAAC;EACD,oBACEnB,OAAA;IAAKQ,SAAS,EAAEV,MAAM,CAACG,aAAc;IAAAqB,QAAA,GAClCnB,KAAK,iBAAIH,OAAA;MAAAsB,QAAA,EAAQnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChC1B,OAAA;MACEE,IAAI,EAAEA,IAAK;MACXE,WAAW,EAAEA,WAAY;MACzBC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEW,YAAa;MACvBV,QAAQ,EAAEA,QAAS;MACnBC,SAAS,EAAEV,MAAM,CAACG,aAAc;MAChCQ,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA,SAAU;MACrB,gBAAcI,KAAK,GAAG,MAAM,GAAG;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACDZ,KAAK,iBAAId,OAAA;MAAMQ,SAAS,EAAC,eAAe;MAAAc,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAER,CAAC;AAAAb,EAAA,CAzCKZ,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}