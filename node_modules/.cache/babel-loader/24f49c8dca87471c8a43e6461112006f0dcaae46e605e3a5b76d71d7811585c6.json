{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/my-app/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fonction de connexion avec Firebase\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      setUser(userCredential.user);\n    } catch (error) {\n      console.error('Erreur lors de la connexion:', error.message);\n    }\n  };\n\n  // Fonction de déconnexion avec Firebase\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      setUser(null);\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error.message);\n    }\n  };\n\n  // Surveiller l'état de l'utilisateur (connexion/déconnexion)\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      setLoading(false);\n    });\n\n    // Nettoyer l'abonnement lorsque le composant est démonté\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook personnalisé pour utiliser le contexte d'authentification\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","onAuthStateChanged","signInWithEmailAndPassword","signOut","auth","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","login","email","password","userCredential","error","console","message","logout","unsubscribe","currentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/my-app/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { onAuthStateChanged, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '../firebase';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Fonction de connexion avec Firebase\n    const login = async (email, password) => {\n        try {\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            setUser(userCredential.user);\n        } catch (error) {\n            console.error('Erreur lors de la connexion:', error.message);\n        }\n    };\n\n    // Fonction de déconnexion avec Firebase\n    const logout = async () => {\n        try {\n            await signOut(auth);\n            setUser(null);\n        } catch (error) {\n            console.error('Erreur lors de la déconnexion:', error.message);\n        }\n    };\n\n    // Surveiller l'état de l'utilisateur (connexion/déconnexion)\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n            setUser(currentUser);\n            setLoading(false);\n        });\n\n        // Nettoyer l'abonnement lorsque le composant est démonté\n        return unsubscribe;\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ user, login, logout, loading }}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n};\n\n// Hook personnalisé pour utiliser le contexte d'authentification\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,kBAAkB,EAAEC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AACvF,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMe,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACA,MAAMC,cAAc,GAAG,MAAMhB,0BAA0B,CAACE,IAAI,EAAEY,KAAK,EAAEC,QAAQ,CAAC;MAC9EL,OAAO,CAACM,cAAc,CAACP,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAChE;EACJ,CAAC;;EAED;EACA,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI;MACA,MAAMnB,OAAO,CAACC,IAAI,CAAC;MACnBQ,OAAO,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACE,OAAO,CAAC;IAClE;EACJ,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACZ,MAAMwB,WAAW,GAAGtB,kBAAkB,CAACG,IAAI,EAAGoB,WAAW,IAAK;MAC1DZ,OAAO,CAACY,WAAW,CAAC;MACpBV,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;;IAEF;IACA,OAAOS,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEI,KAAK;MAAEO,MAAM;MAAET;IAAQ,CAAE;IAAAJ,QAAA,EACzD,CAACI,OAAO,IAAIJ;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE/B,CAAC;;AAED;AAAApB,EAAA,CA1CaF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AA2CzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACS,WAAW,CAAC;AAAA;AAAC0B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}