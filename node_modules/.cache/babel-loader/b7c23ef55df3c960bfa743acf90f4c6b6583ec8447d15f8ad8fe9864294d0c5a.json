{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/my-app/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  const login = (email, password) => {\n    // Simulez ici la vérification d'identité, par exemple avec une API\n    if (email === 'user@example.com' && password === 'password') {\n      setIsAuthenticated(true);\n      navigate('/home'); // Redirige vers la page principale en cas de succès\n    } else {\n      alert('Identifiants incorrects');\n    }\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    navigate('/login'); // Redirige vers la page de connexion\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fFLPwuop1m+61Uu3ULzyaFpmYmI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","navigate","login","email","password","alert","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/my-app/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n\n  const login = (email, password) => {\n    // Simulez ici la vérification d'identité, par exemple avec une API\n    if (email === 'user@example.com' && password === 'password') {\n      setIsAuthenticated(true);\n      navigate('/home');  // Redirige vers la page principale en cas de succès\n    } else {\n      alert('Identifiants incorrects');\n    }\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    navigate('/login');  // Redirige vers la page de connexion\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,IAAID,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC3DJ,kBAAkB,CAAC,IAAI,CAAC;MACxBC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAE;IACtB,CAAC,MAAM;MACLI,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBN,kBAAkB,CAAC,KAAK,CAAC;IACzBC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAET,eAAe;MAAEG,KAAK;MAAEI;IAAO,CAAE;IAAAT,QAAA,EAC7DA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,EAAA,CAxBWF,YAAY;EAAA,QAENJ,WAAW;AAAA;AAAAqB,EAAA,GAFjBjB,YAAY;AA0BzB,OAAO,MAAMkB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACK,WAAW,CAAC;AAAA;AAACoB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}